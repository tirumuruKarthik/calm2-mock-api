<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="f3283d1f-6d83-464d-a4ab-7a5befe6a257" basePath="${http.basePath}" >
		<http:listener-connection host="${http.host}" port="${http.port}" />
	</http:listener-config>
		<configuration-properties doc:name="Configuration properties" doc:id="8f4af7a7-ae6c-4b94-9ca3-19742a86b9b0" file="properties/${mule.env}-properties.yaml" />
	<flow name="calm2-mock-api-flow" doc:id="d31b8433-a670-4b71-a737-28dc6974343c" >
		<http:listener doc:name="Listener" doc:id="92ecb36a-cc86-4682-bb84-e11941102b07" config-ref="HTTP_Listener_config" path="${http.path}">
			<http:response statusCode="#[vars.httpStatus]" />
		</http:listener>
		<flow-ref doc:name="Flow Reference - calm2-mock-api-sub-Flow" doc:id="c1a3f197-0df1-42c6-91f8-40c7257eb4ae" name="calm2-mock-api-sub-Flow"/>
		<logger level="INFO" doc:name="Log Response" doc:id="a59f6dcb-f829-4541-a68f-f1e1f4379f61" message="#[payload]"/>
	</flow>
	<sub-flow name="calm2-mock-api-sub-Flow" doc:id="948523ef-00fd-4356-8d6d-52d4a63cce90" >
		<choice doc:name="Choice" doc:id="68af11b3-9362-4e07-8ebd-71acfe9dbf62" >
			<when expression="#[attributes.headers['Authorization'] == null]">
				<ee:transform doc:name="403 Response" doc:id="e4b71e7d-bfd8-49d3-8e4b-912136858a0a" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	responseCode: 403,
	responseStatus: "Permission Error"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/java
---
404]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</when>
			<when expression="#[payload.orderline.order == null or payload.customer == null]">
				<ee:transform doc:name="404 Response" doc:id="204706be-83c8-4210-9165-77713c371ef7" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	responseCode: 404,
	responseStatus: "Customer or order not found"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/java
---
404]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</when>
			<when expression="#[payload.orderline.erpOrderLineId == payload.orderline.order.erpOrderId]">
				<ee:transform doc:name="409 Response" doc:id="f2015848-bb80-418c-865e-7cd669d9ff4f" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	responseCode: 409,
	responseStatus: "Conflict: order cannot be updated because some licenses have already been used"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/java
---
404]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="200 Response" doc:id="62342a0c-d362-4f77-8aa4-d42fa596deff">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	responseCode: 200,
	responseStatus: "Success, updated"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
output application/java
---
200]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
</mule>
